C51 COMPILER V9.53.0.0   ADC_HX711                                                         11/22/2024 15:53:04 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE ADC_HX711
OBJECT MODULE PLACED IN .\Code\Obj\ADC_HX711.obj
COMPILER INVOKED BY: D:\USR\Keil_v5\C51\BIN\C51.EXE Code\Source\ADC_HX711.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib_nuvoto
                    -n;.\Common;.\Code\Head;.\Code\Source;.\Code\Obj;.\LST;.\Output) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\ADC_H
                    -X711.lst) TABS(2) OBJECT(.\Code\Obj\ADC_HX711.obj)

line level    source

   1          //**************************************************************************
   2          //  similar I2C For HX711
   3          //**************************************************************************
   4          
   5          #include <ADC_HX711.h>
   6          #include <I2C_prog.h>
   7          #include <N76E003.H>
   8          
   9          bit FlagDataReadyADC  = 0;
  10          bit statusADC         = 0; // 0 -> A ; 1 -> B
  11          
  12          xdata long  valueAChADC = 0;
  13          xdata long  valueBChADC = 0;
  14          
  15          bit ADCHX711_getStat(){return statusADC;}
  16          
  17          void ADCHX711_Initial(void){
  18   1        /*  init GPIO       */
  19   1        /*  ADC_OUT as INT  */
  20   1      }
  21          
  22          //**************************************************************************
  23          // READ value ( start read when INT = 0);
  24          //**************************************************************************
  25            /* 
  26            
  27            in the START ADC call func, will be:
  28            0. ADCHX711_Read_CH_A() -> this you get value chA
  29            1. ADCHX711_Read_CH_B() -> this you get value chA
  30            2. ADCHX711_Read_CH_A() -> this you get value chB
  31            3. ADCHX711_Read_CH_B() -> this you get value chA
  32            
  33            NEED:
  34            0. ADCHX711_Read_CH_B() -> this you get value chA
  35            1. ADCHX711_Read_CH_A() -> this you get value chB
  36            2. ADCHX711_Read_CH_B() -> this you get value chA
  37            
  38            *The read value goes to the next sequence of 
  39              clock cycles and not to 1!  
  40          
  41            */
  42          
  43          void ADCHX711_Read_CH_A(){
  44   1        statusADC = 0;
  45   1        I2C_change_size_BUF(A_CH_64);
  46   1        I2C_start();
  47   1        ADCHX711_Read();
  48   1      }
  49          
  50          void ADCHX711_Read_CH_B(){
  51   1        statusADC = 1;
  52   1        I2C_change_size_BUF(B_CH_32);
  53   1        I2C_start();
C51 COMPILER V9.53.0.0   ADC_HX711                                                         11/22/2024 15:53:04 PAGE 2   

  54   1        ADCHX711_Read();
  55   1      }
  56          
  57          //**************************************************************************
  58          // INT
  59          //**************************************************************************
  60          
  61          /*Use func in ISR - in 0*/
  62          void ADC_interrupt(){
  63   1        FlagDataReadyADC = 1;
  64   1        //statusADC =~ statusADC;
  65   1      }
  66          
  67          //**************************************************************************
  68          // I2c
  69          //**************************************************************************
  70          
  71          /*Read value as I2C*/
  72          static void ADCHX711_Read(){
  73   1        if(FlagDataReadyADC){
  74   2          I2C_exchange_start(READ);
  75   2        }
  76   1      }
  77          
  78          /*Save value as I2C*/
  79          static void ADCHX711_Save_value(){
  80   1        
  81   1      
  82   1      }
  83          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     47    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     26    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
