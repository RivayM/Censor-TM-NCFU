C51 COMPILER V9.53.0.0   CENCOR_PROGRAMM                                                   11/11/2024 11:51:25 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE CENCOR_PROGRAMM
OBJECT MODULE PLACED IN .\Code\Obj\CENCOR_PROGRAMM.obj
COMPILER INVOKED BY: D:\USR\Keil_v5\C51\BIN\C51.EXE Code\Source\CENCOR_PROGRAMM.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib_
                    -nuvoton;.\Common;.\Code\Head;.\Code\Source;.\Code\Obj;.\LST;.\Output) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST
                    -\CENCOR_PROGRAMM.lst) TABS(2) OBJECT(.\Code\Obj\CENCOR_PROGRAMM.obj)

line level    source

   1          //********************************************************
   2          //  CENCOR. 
   3          //********************************************************
   4          
   5          #include <CENCOR_PROGRAMM.h>
*** WARNING C318 IN LINE 7 OF .\Code\Head\NRF24L01.H: can't open file 'COFIG.h'
   6          
   7          xdata int mainStateProgressSPI = 0;   // state main func.( work cencor)
   8          
   9          
  10          //********************************************************
  11          // MAIN FUNC - work censor
  12          //********************************************************
  13          void init_device(){
  14   1        GPIO_init();
  15   1        SPI_init_Timer();
  16   1        SPI_CLK_init(0);
  17   1        
  18   1        set_EA;                   // enable interrupts
  19   1      }
  20          
  21          //********************************************************
  22          //  Work with periphery /led/button
  23          //********************************************************
  24          
  25          //********************************************************
  26          //  Work with ADC
  27          //********************************************************
  28          
  29          
  30          //********************************************************
  31          //  Work with NRF and FRAM (spi)
  32          //********************************************************
  33          
  34          void Work_NRF(){
  35   1        if(FlagSPIGlobal) {           // work spi
  36   2          /*  waiting */
  37   2        }
  38   1        else{
  39   2          switch(mainStateProgressSPI){
  40   3            case START_PROCESS:   Process_init_RF();    break;        
  41   3            case 1: Process_work_RF();                  break;
  42   3            // case 2: init FRAM
  43   3            // case 3: Work with FRAM
  44   3            case END_PROCESS:break;
  45   3          }
  46   2        }
  47   1      }
  48          
  49          /*init radio  NRF24*/
  50          void Process_init_RF(void){
  51   1        if(NRF_init()){   // end init rf?
  52   2          mainStateProgressSPI++;   // process ->end go to next
C51 COMPILER V9.53.0.0   CENCOR_PROGRAMM                                                   11/11/2024 11:51:25 PAGE 2   

  53   2        }
  54   1      }
  55          
  56          /*main work NRF24*/
  57          void Process_work_RF(void){
  58   1        if( NRF_get() ){
  59   2          
  60   2        }
  61   1        if(readBuf[1]){
  62   2            PIN_LED_GREEN = ~PIN_LED_GREEN;
  63   2        }
  64   1        
  65   1        // пока прочитать статус и самостоятельно считать
  66   1        // а после настроить прерывание по нему ( извлекать)
  67   1        // флага нет , не считывать данные и пропускать процедуру
  68   1        // считывания
  69   1      }
  70          
  71          //********************************************************
  72          // ISR SPI
  73          //********************************************************
  74          void ISR_Timer0() interrupt 1 {         // <Interface_com.H>
  75   1        if(FlagSPIGlobal){ 
  76   2            if(FlagSPIDelay){
  77   3              SPI_Delay();            // delay SPI
  78   3            } 
  79   2            else{
  80   3              SPI_exchange_start();   // exchange SPI
  81   3            } 
  82   2        }
  83   1      }
  84          
  85          //********************************************************
  86          // ISR ADC
  87          //********************************************************
  88          /*void ISR_INT0() interrupt 0 {  // INT0
  89            if(FlagInComSPIGlobal){ InCom_SPI_exchange();}
  90          }*/
  91          
  92          //********************************************************
  93          // ISR NRF
  94          //********************************************************
  95          void ISR_INT1() interrupt 2 {  // INT1
  96   1        FlagDataReadReady = 1;
  97   1        PIN_LED_RED =~ PIN_LED_RED;
  98   1      }
  99          
 100          
 101          
 102          
 103          
 104          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    149    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    398    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.53.0.0   CENCOR_PROGRAMM                                                   11/11/2024 11:51:25 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
