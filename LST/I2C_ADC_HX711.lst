C51 COMPILER V9.53.0.0   I2C_ADC_HX711                                                     10/02/2024 16:53:46 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE I2C_ADC_HX711
OBJECT MODULE PLACED IN .\Code\Obj\I2C_ADC_HX711.obj
COMPILER INVOKED BY: D:\USR\Keil_v5\C51\BIN\C51.EXE Code\Source\I2C_ADC_HX711.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib_nu
                    -voton;.\Common;.\Code\Head;.\Code\Source;.\Code\Obj;.\LST;.\Output) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\I
                    -2C_ADC_HX711.lst) TABS(2) OBJECT(.\Code\Obj\I2C_ADC_HX711.obj)

line level    source

   1          //**************************************************************************
   2          //  similar I2C For HX711
   3          //**************************************************************************
   4          
   5          #include <I2C_ADC_HX711.h>
   6          #include <GPIO.h>
   7          #include <N76E003.H>
   8          
   9          void ADCHX711_Initial(void){
  10   1        //ADDO = 1;                       // ADDO если подать в 0 вернется к 
  11   1        ADSK = 0;                         // первоначальным настройкам (подать)
  12   1        while(ADOUT);                     // Cделать первое чтение
  13   1        ADCHX711_Read();                  // для установки настроек
  14   1      }
  15          
  16          unsigned long ADCHX711_Read(void){
  17   1        unsigned long Count;
  18   1        unsigned char i;
  19   1        //прочитать -> { ADDO = 0 } -> начать извлечение
  20   1        ADSK = 0;
  21   1        Count = 0;
  22   1        for(i = 0; i < SIZE_DATA; i++ ){
  23   2          if(ADOUT) Count++;
  24   2          ADSK = 1;
  25   2          Count = Count<<1;
  26   2          ADSK = 0;
  27   2        }
  28   1        // cделать оставшиеся исмпульсы согласно настройке
  29   1        for(i = 0; i < ( PD_SCK - SIZE_DATA ); i++ ){
  30   2          ADSK = 1;
  31   2          _nop_();
  32   2          ADSK = 0;
  33   2        }
  34   1        Count = Count^0x800000;  
  35   1        return Count;
  36   1      }
  37          
  38          
  39          
  40          
  41          
  42          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     65    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.53.0.0   I2C_ADC_HX711                                                     10/02/2024 16:53:46 PAGE 2   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
