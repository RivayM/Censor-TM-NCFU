C51 COMPILER V9.53.0.0   INTERFACE_COM                                                     10/09/2024 15:05:16 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INTERFACE_COM
OBJECT MODULE PLACED IN .\Code\Obj\Interface_com.obj
COMPILER INVOKED BY: D:\USR\Keil_v5\C51\BIN\C51.EXE Code\Source\Interface_com.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib_nu
                    -voton;.\Common;.\Code\Head;.\Code\Source;.\Code\Obj;.\LST;.\Output) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\I
                    -nterface_com.lst) TABS(2) OBJECT(.\Code\Obj\Interface_com.obj)

line level    source

   1          //********************************************************
   2          //  Interface common
   3          //********************************************************
   4          #include <Interface_com.H>
   5          #include <N76E003.H>
   6          
   7          unsigned char valueBufferArrayTx[BUFFER_SPI_MASSIV_SIZE];  
   8          unsigned char valueBufferArrayRx[BUFFER_SPI_MASSIV_SIZE];  
   9          
  10          int amountByteArrayForSend = BUFFER_SPI_MASSIV_SIZE; 
  11          int counterBit             = 0;   
  12          int counterByte            = 0;
  13          bit FlagInComSPIGlobal     = 0;  
  14          
  15          int valueDelay             = 0;
  16          bit FlagInComDelay         = 0;
  17          
  18          /* Init timer and start */
  19          void InCom_SPI_init_Timer(){
  20   1        TIMER0_MODE1_ENABLE;      // Mode timer
  21   1        TH0 = FREQ_H;             // setting freq:
  22   1        TL0 = FREQ_L;             // 
  23   1        set_ET0;                  // enable Timer0 interrupt
  24   1        set_TR0;                  // Timer0 run
  25   1      }
  26          
  27          /* main func(for timer) */
  28          void InCom_SPI_exchange(void){
  29   1        InCom_SPI( 
  30   1        InCom_SPI_Output_in_buffer(
  31   1          &valueBufferArrayTx[counterByte]),   // buf  for Tx
  32   1        &valueBufferArrayRx[counterByte]);     // buf  for Rx
  33   1      }
  34          
  35          /* exchange bitwise operation */
  36          void InCom_SPI(bit valueMosi, unsigned char *outSideBuffer){ 
  37   1        if(counterBit) {                      // CPOL 
  38   2          PIN_CLK_SPI =~PIN_CLK_SPI;          // clocking
  39   2        }                 
  40   1        if( PIN_CLK_SPI == 0) {               // CPHA
  41   2          switch(counterBit){                 // Start
  42   3            /******************************/
  43   3            case BUFFER_SPI:                  // End packet
  44   3              PIN_MOSI_SPI = 1;
  45   3              PIN_MISO_SPI = 1;
  46   3              PIN_CLK_SPI  = 0; 
  47   3              counterBit = 0;
  48   3              if(counterByte == amountByteArrayForSend - 1){ // end exchange
  49   4                PIN_CS_SPI  = 1;
  50   4                counterByte = 0;
  51   4                FlagInComSPIGlobal = 0; 
  52   4              }
  53   3              else counterByte++;                 // next packet
C51 COMPILER V9.53.0.0   INTERFACE_COM                                                     10/09/2024 15:05:16 PAGE 2   

  54   3              break;
  55   3            /******************************/
  56   3            default:                          // process going
  57   3              PIN_CS_SPI   = 0;
  58   3              PIN_MOSI_SPI = valueMosi;       // send MoSi
  59   3              if ( PIN_MISO_SPI == 1){      // send MiSo  
  60   4                InCom_SPI_Input_in_buffer(outSideBuffer);
  61   4              } 
  62   3              counterBit++;                   // next bit
  63   3              break;
  64   3          }
  65   2        }
  66   1      }
  67          
  68          /* save reading bit in buf */
  69          void InCom_SPI_Input_in_buffer(unsigned char *outSideBuffer){
  70   1        unsigned char buf;
  71   1        buf = *outSideBuffer;
  72   1        if(counterBit == 0){         // start bit
  73   2          if(SPI_MSB){
  74   3            *outSideBuffer = 0x80;   
  75   3            return;
  76   3          }
  77   2        }
  78   1        if(counterBit < BUFFER_SPI){ // next bit
  79   2          if(SPI_MSB) buf = buf + (0x01 << counterBit -1);
  80   2          else        buf = buf + (0x01 << counterBit);
  81   2          *outSideBuffer = buf; 
  82   2        }
  83   1      }
  84          
  85          
  86          /* read buf and send bit*/
  87          bit InCom_SPI_Output_in_buffer(unsigned char *outSideBuffer){
  88   1        unsigned char buf;
  89   1        buf = *outSideBuffer;  
  90   1        if (counterBit == 0){                   // start bit
  91   2          if(SPI_MSB){ buf = buf & 0x01; }      // mask MSB
  92   2          else       { buf = buf & 0x80; }      // mask LSB
  93   2        }
  94   1        if( counterBit < 8 && counterBit != 0){ // next bit 
  95   2          buf = buf & (0x01 << counterBit);
  96   2        }
  97   1        if(buf) { return 1; } else { return 0; } 
  98   1      }
  99          
 100          
 101          
 102          
 103          
 104          
 105          
 106          /*Delay = 1 timer cycle timer*/
 107          void InCom_Delay(){
 108   1        if(valueDelay){ valueDelay--; }
 109   1        else{ 
 110   2          FlagInComDelay = 0; 
 111   2          FlagInComSPIGlobal = 0;
 112   2        }
 113   1      }
 114          
 115          /*SET Delay = 1 timer cycle timer*/
C51 COMPILER V9.53.0.0   INTERFACE_COM                                                     10/09/2024 15:05:16 PAGE 3   

 116          void InCom_Set_Delay(int delay){
 117   1        valueDelay = delay;
 118   1        FlagInComDelay = 1;
 119   1        FlagInComSPIGlobal = 1;
 120   1      }
 121          
 122          /* init clk */
 123          void InCom_SPI_CLK_init(bit init){ PIN_CLK_SPI = init;}
 124          
 125          void InCom_SPI_start(void){FlagInComSPIGlobal = 1;}
*** WARNING C294 IN LINE 80 OF Code\Source\Interface_com.c: unreachable code
*** WARNING C294 IN LINE 92 OF Code\Source\Interface_com.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    281    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
