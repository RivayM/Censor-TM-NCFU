C51 COMPILER V9.53.0.0   NRF24L01                                                          09/20/2024 15:49:31 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE NRF24L01
OBJECT MODULE PLACED IN .\Code\Obj\NRF24L01.obj
COMPILER INVOKED BY: D:\USR\Keil_v5\C51\BIN\C51.EXE Code\Source\NRF24L01.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib_nuvoton
                    -;.\Common;.\Code\Head;.\Code\Source;.\Code\Obj;.\LST;.\Output) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\NRF24L
                    -01.lst) TABS(2) OBJECT(.\Code\Obj\NRF24L01.obj)

line level    source

   1          //********************************************************************************************************
             -***
   2          //  NRF24L01 
   3          //********************************************************************************************************
             -***
   4          #include <GPIO.h>
   5          #include <N76E003.h>
   6          #include <CONFIG.h>
   7          #include <NRF24L01.h>
   8          #include <Interface_com.H>
   9          
  10          int currentProgress = 0;
  11          
  12          unsigned char NRF_TX_ADDRESS[BUFFER_MASSIV_SIZE ] =
  13          {'i','n','t','e','r'};  // адрес передатчика
  14          unsigned char NRF_RX_ADDRESS[BUFFER_MASSIV_SIZE ] =
  15          {'m','a','r','k','1'};  // адрес приемника 
  16          
  17          void NRF_send_byte(unsigned char *byte){
  18   1        InCom_SPI_byte_transitive(byte);  
  19   1        FlagInComSPIGlobal = 1;
  20   1        FlagInComSPIexchangeByte = 1;
  21   1      }
  22          
  23          void NRF_send_array(unsigned char *array){
  24   1        InCom_SPI_byte_transitive(array); 
  25   1        FlagInComSPIGlobal = 1;
  26   1        FlagInComSPIexchangeArray = 1;
  27   1      }
  28          
  29          
  30          
  31          
  32          
  33          
  34          
  35          
  36          void NRF_config(int mode){ 
  37   1        NRF_CE = 0;
  38   1        switch(mode){
  39   2          case TX_mode: 
  40   2            break;
  41   2          case RX_mode: 
  42   2            break;
  43   2          case RTX_mode:
  44   2            break;
  45   2          default: break;
  46   2        }
  47   1        
  48   1        
  49   1        
  50   1      //  SPI_CE=0;                       
  51   1      //  Timer0_Delay100us(100);
C51 COMPILER V9.53.0.0   NRF24L01                                                          09/20/2024 15:49:31 PAGE 2   

  52   1      //  spi_WREG(W_REG|EN_AA,0x01);                             //Enable ShockBurst (Enable Auto ACK)    
  53   1      //  spi_WREG(W_REG|SETUP_AW,0x03);                          //Puts the address field width 5bytes  
  54   1      //  spi_WREG(W_REG|RF_CH,0x6E);                             //Set frequency channel 110 (2.510MHz)
  55   1      //  spi_WREG(W_REG|RF_SETUP,0x06);                          //Setup: 1Mbps, 0dBm, LNA off  
  56   1      //  spi_WREG(W_REG|EN_RXADDR,0x01);                         //Enable data pipe 0                  
  57   1      //  spi_WBUF(W_REG|RX_ADDR_P0,RX_ADDRESS,TX_ADD_WIDTH);   //Set static RX address for auto ack
  58   1      //  spi_WREG(W_REG|RX_PW_P0,TX_PLOAD_WIDTH);                //Set RX payload length
  59   1      //  spi_WREG(FLUSH_RX,NOP);                                 //Clear the RX_FIFO
  60   1      //  spi_WREG(FLUSH_TX,NOP);                    //Clear the TX_FIFO
  61   1      //  spi_WREG(W_REG|CONFIG,0x0F);    //Set PWR_UP bit, enable CRC(2 bytes) & Prim:RX. RX_DR enabled  
  62   1      //  Timer0_Delay100us(5);
  63   1      //  SPI_CE=1;
  64   1      #endif
*** WARNING C312 IN LINE 64 OF Code\Source\NRF24L01.c: misplaced endif control
  65   1      }
  66          
  67          #ifdef TX_mode
  68          unsigned char TX_PL(unsigned char *payload)
  69          {
  70   1        unsigned char stat;
  71   1      //  SPI_CE=0;    
  72   1      //  Timer0_Delay100us(100);
  73   1      //  spi_WREG(W_REG|CONFIG,0x0E);               //PRIM_RX : PTX
  74   1      //  clear_irq();
  75   1      //  spi_WREG(W_REG|EN_AA,0x01);                //Enable ShockBurst (Enable Auto ACK)
  76   1      //  spi_WREG(W_REG|EN_RXADDR,0x01);            //Enable data pipe 0
  77   1      //  spi_WREG(W_REG|SETUP_AW,0x03);             // Puts the address field width 5bytes
  78   1      //  spi_WREG(W_REG|SETUP_PETR,0x1A);           //Auto retransmit: wait 500us, 10 retries
  79   1      //  spi_WREG(W_REG|RF_CH,0x6E);                //Set frequency channel 110 (2.510MHz)
  80   1      //  spi_WREG(W_REG|RF_SETUP,0x06);             //Setup: 1Mbps, 0dBm, LNA off 
  81   1      //  //spi_WREG(W_REG|CONFIG,0x0E);             //Set PWR_UP bit, enable CRC(2 bytes) & Prim:TX. MAX_RT & T
             -X_DS enabled 
  82   1      //  spi_WBUF(W_REG|TX_ADDR,TX_ADDRESS,TX_ADD_WIDTH);      //Set static TX address
  83   1      //  spi_WBUF(W_REG|RX_ADDR_P0,RX_ADDRESS,TX_ADD_WIDTH);   //Set static RX address for auto ack
  84   1      //  spi_WBUF(W_TX_PL,payload,TX_PLOAD_WIDTH);  //Write specified buffer to FIFO
  85   1      //  SPI_CE=1;
  86   1      //  Timer0_Delay100us(1);
  87   1      //  SPI_CE=0;
  88   1      //  get_status();
  89   1      //  spi_WREG(FLUSH_RX,NOP);                    //Clear the RX_FIFO
  90   1      //  spi_WREG(FLUSH_TX,NOP);                    //Clear the TX_FIFO
  91   1        return stat;  
  92   1      }
*** WARNING C280 IN LINE 68 OF Code\Source\NRF24L01.c: 'payload': unreferenced local variable
  93          #endif
  94          
  95          
  96          
  97          
  98          
  99          
 100          
 101          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     28    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       4
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.53.0.0   NRF24L01                                                          09/20/2024 15:49:31 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
