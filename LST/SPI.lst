C51 COMPILER V9.53.0.0   SPI                                                               09/17/2024 11:03:08 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN .\Code\Obj\SPI.obj
COMPILER INVOKED BY: D:\USR\Keil_v5\C51\BIN\C51.EXE Code\Source\SPI.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib_nuvoton;.\Co
                    -mmon;.\Code\Head;.\Code\Source;.\Code\Obj;.\LST;.\Output) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\SPI.lst) TA
                    -BS(2) OBJECT(.\Code\Obj\SPI.obj)

line level    source

   1          //**************************************************************************
   2          //  SPI_ N76
   3          //**************************************************************************
   4          #include <SPI.h>
   5          #include <GPIO.h>
   6          #include <N76E003.H>
   7          
   8          void SPI_Initial(void){ 
   9   1        
  10   1      //  /***/ // настройка управлением cs
  11   1      //  set_DISMODF;                // SS General purpose I/O ( No Mode Fault ) 
  12   1      //  clr_SSOE;
  13   1      //  /***/ // настройка отправки данных начинается с msb
  14   1      //  clr_LSBFE;                    // установить 1 младший бит       
  15   1      //  //set_LSBFE;
  16   1      //  /***/ // настройки 2 битов отвечающие за вид clk
  17   1      //  clr_CPOL;                     //  clr_CPOL set_CPHA
  18   1      //  set_CPHA;                     // 
  19   1      //  /***/ // настройка режимов SPI
  20   1      //  set_MSTR;                     // SPI in Master mode 
  21   1      //  SPICLK_DIV16;                 // Select SPI clock : 1M bit/s
  22   1      //  set_SPIEN;                    // Enable SPI function (настраивать в конце!)
  23   1      //  /***/ // Разрешить прерывания spi
  24   1      //  clr_SPIF;
  25   1      //  set_EA;
  26   1        
  27   1          SPICLK_DIV16;                             // Select SPI clock 
  28   1          set_DISMODF;// SS General purpose I/O ( No Mode Fault ) 
  29   1          set_MSTR;   // SPI in Master mode 
  30   1          clr_CPOL;   // The SPI clock is low in idle mode
  31   1          set_CPHA;   // The data is sample on the second edge of SPI clock 
  32   1          set_SPIEN;  // Enable SPI function 
  33   1          clr_SPIF;
  34   1          set_EA;
  35   1      }
  36          
  37          unsigned char SPI_Send(unsigned char sendData){
  38   1        unsigned char buffer23;
  39   1        SPDR = sendData;
  40   1        while(!(SPSR & SET_BIT7));
  41   1        //buffer = SPDR;
  42   1        clr_SPIF;
  43   1        return buffer23;
  44   1      }
  45          
  46          unsigned char SPI_Read(unsigned char receiveData){
  47   1        //CS= 0;
  48   1        PCON |= SET_BIT0;         // Enter idle mode
  49   1        //receiveData = SPDR;
  50   1        //  need clr_SPIF;
  51   1        //CS = 1;
  52   1        return SPDR;
  53   1      }
C51 COMPILER V9.53.0.0   SPI                                                               09/17/2024 11:03:08 PAGE 2   

*** WARNING C280 IN LINE 46 OF Code\Source\SPI.c: 'receiveData': unreferenced local variable
  54          
  55          
  56          
  57          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     48    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
